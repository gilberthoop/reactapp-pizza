{"version":3,"sources":["components/NavBar.js","components/MenuItem.js","components/MenuList.js","components/Orders.js","components/Checkout.js","components/Footer.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","MenuItem","props","state","modalOpen","feedback","name","image","toppings","size","crust","quantity","price","handleWindowOpen","bind","handleWindowClose","handleAddOrder","this","setState","menuItem","addOrders","axios","post","pizza","then","response","data","status","sweetalert","catch","error","console","log","errorMessage","title","text","icon","dangerMode","src","alt","map","topping","key","reduce","prev","curr","cost","small","medium","large","Modal","trigger","Button","onClick","open","onClose","Header","Content","Form","Field","type","value","onChange","e","target","crustType","Fragment","min","max","Actions","React","Component","MenuList","menu","id","Orders","orders","total","handleOpenModal","handleDeleteItem","handleCancel","get","order","fetchOrders","url","itemId","Array","isArray","length","item","_id","Confirm","header","content","onCancel","onConfirm","href","Checkout","phone","handleSubmit","event","preventDefault","saveCustomer","deleteOrder","window","location","replace","onSubmit","required","class","Footer","Home","rel","App","fetchMenu","path","exact","component","render","Boolean","hostname","match","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a2012254.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <div className=\"ui orange inverted three item stackable menu\">\r\n            <Link className=\"item\" to=\"/\">Home</Link>\r\n            <Link className=\"item\" to=\"/menu\">Menu</Link>\r\n            <Link className=\"item\" to=\"/orders\">Your orders</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { Button, Modal, Form } from 'semantic-ui-react'\r\nimport axios from 'axios';\r\nimport sweetalert from 'sweetalert';\r\n\r\nclass MenuItem extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n            modalOpen: false,\r\n            feedback: \"\",\r\n            name: ' ',\r\n            image: ' ',\r\n            toppings: [],\r\n            size: '',\r\n            crust: '',\r\n            quantity: 1,\r\n            price: 0\r\n        };\r\n\r\n        // Event handlers\r\n        this.handleWindowOpen = this.handleWindowOpen.bind(this);\r\n        this.handleWindowClose = this.handleWindowClose.bind(this);\r\n        this.handleAddOrder = this.handleAddOrder.bind(this);\r\n    }\r\n\r\n\r\n    handleWindowOpen() {\r\n        // Open the modal and assign/update pizza name and toppings states\r\n        this.setState({\r\n            modalOpen: true,\r\n            name: this.props.menuItem.name,\r\n            image: this.props.menuItem.image,\r\n            toppings: this.props.menuItem.toppings\r\n        });\r\n    }\r\n\r\n\r\n    handleWindowClose() {\r\n        // Reset the states and close the modal\r\n        this.setState({\r\n            modalOpen: false,\r\n            feedback: \"\",\r\n            name: ' ',\r\n            image: ' ',\r\n            toppings: [],\r\n            size: '',\r\n            crust: '',\r\n            quantity: 1,\r\n            price: 0\r\n        });\r\n    }\r\n\r\n\r\n    handleAddOrder() {\r\n        let { size, crust, quantity } = this.state;\r\n\r\n        // Validate inputs\r\n        if (size === \"\" || crust === \"\") {\r\n            return this.setState({ feedback: \"Please choose the size and crust for your pizza\" });\r\n        }\r\n        if (quantity <= 0 || quantity > 10) {\r\n            return this.setState({ feedback: \"Order quantity cannot be less than 1, or more than 10.\" });\r\n        }\r\n\r\n        // Send a async post request through axios\r\n        this.addOrders();\r\n\r\n        // Close the modal \r\n        this.handleWindowClose();\r\n    }\r\n\r\n\r\n    addOrders() {\r\n        // Send the order request to the server\r\n        axios.post('/api/orders', {\r\n            pizza: this.state.name,\r\n            image: this.state.image,\r\n            toppings: this.state.toppings,\r\n            size: this.state.size,\r\n            crust: this.state.crust,\r\n            quantity: this.state.quantity,\r\n            price: this.state.price\r\n        })\r\n            .then(response => {\r\n                this.setState({ feedback: response.data.status });\r\n                sweetalert(this.state.feedback, 'Thank you!', 'success')\r\n                    .then(() => this.setState({ feedback: \" \", quantity: 1 }));\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({ feedback: error.response.data.errorMessage });\r\n                sweetalert({\r\n                    title: this.state.feedback,\r\n                    text: 'Please try again.',\r\n                    icon: 'error',\r\n                    dangerMode: true\r\n                })\r\n                    .then(() => this.setState({ feedback: \" \", quantity: 1 }))\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"column\">\r\n                <div className=\"ui piled segment\">\r\n                    <img className=\"ui fluid bordered image\" src={this.props.menuItem.image} alt=\"\" />\r\n                    <div className=\"ui center aligned segment\"><h3>{this.props.menuItem.name}</h3></div>\r\n                    <p>\r\n                        Toppings:&nbsp;\r\n                {this.props.menuItem.toppings.map(topping => {\r\n                        return (<span key={topping}>{topping}</span>)\r\n                    })\r\n                            .reduce((prev, curr) => [prev, ', ', curr])}\r\n                    </p>\r\n\r\n                    <p>\r\n                        Small: ${this.props.menuItem.cost.small} <br />\r\n                    Medium: ${this.props.menuItem.cost.medium} <br />\r\n                    Large: ${this.props.menuItem.cost.large} <br />\r\n                    </p>\r\n                    <Modal\r\n                        trigger={<Button onClick={this.handleWindowOpen} className=\"ui inverted orange button\">Add to order</Button>}\r\n                        open={this.state.modalOpen}\r\n                        onClose={this.handleWindowClose}\r\n                    >\r\n                        <Modal.Header>{this.props.menuItem.name}</Modal.Header>\r\n                        <Modal.Content>\r\n                            <Form className=\"ui form\">\r\n                                <div className=\"inline fields\">\r\n                                    <Form.Field>\r\n                                        <h4>Choose your size:</h4></Form.Field>\r\n                                    {this.props.menuItem.size.map(size => {\r\n                                        return (\r\n                                            <Form.Field key={size}>\r\n                                                <div className=\"ui radio checkbox\">\r\n                                                    <input\r\n                                                        type=\"radio\"\r\n                                                        name=\"size\"\r\n                                                        value={size}\r\n                                                        onChange={(e) => this.setState({ size: e.target.value })\r\n                                                        }\r\n                                                    />\r\n                                                    <label>{size}</label>\r\n                                                </div>\r\n                                            </Form.Field>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                                <br />\r\n                                <div className=\"inline fields\">\r\n                                    <Form.Field><h4>Choose your crust:</h4></Form.Field>\r\n                                    {this.props.menuItem.crust.map(crustType => {\r\n                                        return (\r\n                                            <Form.Field key={crustType}>\r\n                                                <div className=\"ui radio checkbox\">\r\n                                                    <input\r\n                                                        type=\"radio\"\r\n                                                        name=\"crust\"\r\n                                                        value={crustType}\r\n                                                        onChange={(e) => this.setState({ crust: e.target.value })\r\n                                                        }\r\n                                                    />\r\n                                                    <label>{crustType}</label>\r\n                                                </div>\r\n                                            </Form.Field>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                                <br />\r\n                                <h4>Quantity (Maximum of 10 orders per pizza only)</h4>\r\n                                {\r\n                                    <React.Fragment>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            name=\"quantity\"\r\n                                            min=\"1\"\r\n                                            max=\"10\"\r\n                                            value={this.state.quantity}\r\n                                            onChange={(e) => this.setState({\r\n                                                quantity: e.target.value\r\n                                            })}>\r\n                                        </input>\r\n                                    </React.Fragment>\r\n                                }\r\n                                <br />\r\n                                <h4 className=\"ui negative message\">{this.state.feedback}</h4>\r\n                            </Form>\r\n                        </Modal.Content>\r\n                        <Modal.Actions>\r\n                            <Button onClick={this.handleWindowClose}>Cancel</Button>\r\n                            <Button onClick={this.handleAddOrder}>Place order</Button>\r\n                        </Modal.Actions>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MenuItem;","import React from 'react';\r\nimport MenuItem from './MenuItem';\r\n\r\nfunction MenuList({ menu }) {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <h2 className=\"ui header centered\">\r\n                <img className=\"ui image\" src=\"https://images.vexels.com/media/users/3/157205/isolated/preview/5dd5e3530e81a4d5afdd883d27d43de2-black-and-white-pizza-icon-by-vexels.png\" alt=\"\" />\r\n                <div className=\"content\">MenuList</div>\r\n            </h2>\r\n            <div className=\"ui two column stackable grid container\">\r\n                {menu.map(menuItem => {\r\n                    return (\r\n                        <MenuItem key={menuItem.id} menuItem={menuItem} />\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuList;","import React from 'react';\r\nimport { Button, Confirm } from 'semantic-ui-react'\r\nimport axios from 'axios';\r\nimport sweetalert from 'sweetalert';\r\n\r\nclass Orders extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = { orders: [], total: 0, feedback: \" \", pizza: \" \", open: false, id: \"\" };\r\n\r\n        this.handleOpenModal = this.handleOpenModal.bind(this);\r\n        this.handleDeleteItem = this.handleDeleteItem.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n    }\r\n\r\n\r\n    fetchOrders() {\r\n        // Retrieve all the orders from the database\r\n        axios.get('/api/orders')\r\n            .then(response => {\r\n                this.setState({\r\n                    orders: response.data.order,\r\n                    total: response.data.total\r\n                });\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.fetchOrders();\r\n    }\r\n\r\n\r\n    handleOpenModal(id, pizza) {\r\n        // Open the modal and set pizza value for the modal content\r\n        this.setState({ open: true, id: id, pizza: pizza });\r\n    }\r\n\r\n\r\n    handleDeleteItem() {\r\n        // Issue a post request for item delete\r\n        let url = `/api/orders/delete/${this.state.id}`;\r\n        axios.post(url, { itemId: this.state.id })\r\n            .then(response => {\r\n                this.setState({ feedback: response.data.status });\r\n                sweetalert(this.state.feedback, 'You may close this window now', 'success')\r\n                    .then(() => this.setState({ feedback: \" \" }));\r\n\r\n                // Re-fetch the orders\r\n                this.fetchOrders();\r\n            })\r\n            .catch(error => {\r\n                this.setState({ feedback: error.response.data.errorMessage });\r\n                sweetalert({\r\n                    title: this.state.feedback,\r\n                    text: 'Please try again.',\r\n                    icon: 'error',\r\n                    dangerMode: true\r\n                })\r\n                    .then(() => this.setState({ feedback: \" \" }))\r\n            });\r\n\r\n        // Close the modal\r\n        this.setState({ open: false });\r\n    }\r\n\r\n\r\n    handleCancel() {\r\n        // Close the modal\r\n        this.setState({ open: false });\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!Array.isArray(this.state.orders) || !this.state.orders.length) {\r\n            return (\r\n                <div className=\"ui text container\">\r\n                    <div className=\"ui big warning message\">\r\n                        <p>Your order queue is currently empty.</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"ui container\">\r\n                <h2 className=\"ui header centered\">\r\n                    <img className=\"ui image\" src=\"https://images.vexels.com/media/users/3/157205/isolated/preview/5dd5e3530e81a4d5afdd883d27d43de2-black-and-white-pizza-icon-by-vexels.png\" alt=\"\" />\r\n                    <div className=\"content\">Your Orders</div>\r\n                </h2>\r\n                <div className=\"ui two column stackable grid container\">\r\n                    {this.state.orders.map(item => {\r\n                        return (\r\n                            <div key={item._id} className=\"column\">\r\n                                <div className=\"ui piled segment\">\r\n                                    <img className=\"ui fluid bordered image\" src={item.image} alt=\"\" />\r\n                                    <div className=\"ui center aligned segment\"><h3>{item.pizza}</h3></div>\r\n                                    <p>\r\n                                        Toppings:&nbsp;\r\n                                {item.toppings.map(topping => {\r\n                                        return (<span key={topping}>{topping}</span>)\r\n                                    })\r\n                                            .reduce((prev, curr) => [prev, ', ', curr])}\r\n                                    </p>\r\n                                    <p>Size: {item.size}</p>\r\n                                    <p>Quantity: {item.quantity}</p>\r\n                                    <p>Price: {item.price}</p>\r\n                                    <Button className=\"ui inverted red button\" onClick={() => this.handleOpenModal(item._id, item.pizza)}>Remove</Button>\r\n                                    <Confirm\r\n                                        open={this.state.open}\r\n                                        header=\"Please confirm to delete item\"\r\n                                        content={this.state.pizza}\r\n                                        onCancel={this.handleCancel}\r\n                                        onConfirm={this.handleDeleteItem}\r\n                                    />\r\n                                    <br />\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                    <div className=\"ui header centered\">\r\n                        <h3>Total price: {this.state.total}</h3>\r\n                        <a className=\"ui green button\" href=\"/checkout\">Proceed to Checkout</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Orders;","import React from 'react';\r\nimport axios from 'axios';\r\nimport sweetalert from 'sweetalert';\r\n\r\nclass Checkout extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = { name: \"\", phone: \"\", total: 0 };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // Retrieve the total price for the order\r\n        axios.get('/api/orders')\r\n            .then(response => {\r\n                this.setState({\r\n                    total: response.data.total\r\n                });\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let { name, phone } = this.state;\r\n\r\n        // Validate inputs\r\n        if (name === \"\" || name.length < 2) {\r\n            sweetalert({\r\n                title: 'Name is invalid.',\r\n                text: 'Please try again.',\r\n                icon: 'error',\r\n                dangerMode: true\r\n            });\r\n            return;\r\n        }\r\n        if (phone === \"\" || phone.length < 10) {\r\n            sweetalert({\r\n                title: 'Phone number is invalid.',\r\n                text: 'Please try again.',\r\n                icon: 'error',\r\n                dangerMode: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Validation passed, save the customer to db\r\n        this.saveCustomer(name, phone);\r\n\r\n        // Delete the entire order after submitting it\r\n        this.deleteOrder();\r\n    }\r\n\r\n\r\n    saveCustomer(name, phone) {\r\n        axios.post('/api/customers', { name, phone })\r\n            .then(response => {\r\n                return sweetalert('Your order is on the way.', 'Thank you!', 'success')\r\n            })\r\n            .catch(error => {\r\n                sweetalert({\r\n                    title: error.response.data.errorMessage,\r\n                    text: 'Please try again.',\r\n                    icon: 'error',\r\n                    dangerMode: true\r\n                });\r\n                return;\r\n            });\r\n    }\r\n\r\n\r\n    deleteOrder() {\r\n        axios.post('/api/orders/delete')\r\n            .then((response) => {\r\n                sweetalert('Your order is on the way.', 'Thank you!', 'success')\r\n                    .then(() => window.location.replace(\"/\"));\r\n            })\r\n            .catch((error) => {\r\n                sweetalert({\r\n                    title: 'Ooops. There was an error deleeting your order.',\r\n                    text: 'Please try again.',\r\n                    icon: 'error',\r\n                    dangerMode: true\r\n                })\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui text container\">\r\n                <h2 className=\"ui header centered\">\r\n                    <img className=\"ui image\" src=\"https://images.vexels.com/media/users/3/157205/isolated/preview/5dd5e3530e81a4d5afdd883d27d43de2-black-and-white-pizza-icon-by-vexels.png\" alt=\"\" />\r\n                    <div className=\"content\">Checkout</div>\r\n                </h2>\r\n                <h3>Your balance is: {this.state.total}</h3>\r\n                <br />\r\n                <form className=\"ui form\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"field\">\r\n                        <label>Name: </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={this.state.name}\r\n                            onChange={(e) => this.setState({ name: e.target.value })} required\r\n                        />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Phone</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"phone\"\r\n                            value={this.state.phone}\r\n                            onChange={(e) => this.setState({ phone: e.target.value })}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <input class=\"ui green button\" type=\"submit\" value=\"Submit Order\" />\r\n                </form>\r\n\r\n                <div className=\"ui piled segment\">\r\n                    <p>Please note that this app is only for a testing; not a real app.</p>\r\n                </div>\r\n                <br /><br /><br />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Checkout;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"ui inverted orange vertical footer segment\">\r\n            <div className=\"ui center aligned container\">\r\n                William Gilbert Go &copy;\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Footer from './Footer';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <div className=\"ui text container\">\r\n                <img className=\"ui medium image\" src=\"https://images.vexels.com/media/users/3/157205/isolated/preview/5dd5e3530e81a4d5afdd883d27d43de2-black-and-white-pizza-icon-by-vexels.png\" alt=\"\" />\r\n                <h2 className=\"ui header centered\">\r\n                    <div className=\"content\">Will's Pizzeria</div>\r\n                </h2>\r\n\r\n                <div className=\"ui piled segment\">\r\n                    <h2>About this app</h2>\r\n                    <p>\r\n                        This pizza ordering app is inspired by an exisisting final project that I completed and submitted in my Node JS course (COMP 2912) at the British Columbia Institute of Technology.\r\n                    I added a React flavour on the front end of the app to enhance user interface and user experience. <br /><br />\r\n                    This app is built in MongoDB, Express, React, and Node (MERN) stack.\r\n                </p>\r\n                </div>\r\n\r\n                <div className=\"ui piled segment\">\r\n                    <h2>About me</h2>\r\n                    <p>Hello everyone,</p>\r\n                    <p>\r\n                        My name is William Gilbert Go. I am a hard-working developer with an aptitude for creating elegant solutions in the least amount of time. Building mobile-first, easy to use, user-friendly web applications is truly a passion of mine. I have developed online booking and registration systems, web portal, and casino-themed online games.\r\n                </p>\r\n                    <p>\r\n                        As someone who is passionate about software architecture and cloud computing, I actively seek out new technologies and stay up-to-date on industry trends and innovations. In addition, I attend web developer meetups and hackathons in Vancouver.\r\n                </p>\r\n                </div>\r\n\r\n                <div className=\"ui orange inverted center aligned circular segment\">\r\n                    <h2 className=\"ui header\">\r\n                        Visit my site <a className=\"ui white\" href=\"https://devwilliamgo.github.io/williamgo/\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>\r\n                    </h2>\r\n                </div>\r\n                <br /><br />\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\nimport 'semantic-ui-css/semantic.min.css';\nimport NavBar from './components/NavBar';\nimport MenuList from './components/MenuList';\nimport Orders from './components/Orders';\nimport Checkout from './components/Checkout';\nimport Home from './components/Home';\n\nclass App extends React.Component {\n  constructor(props) {\n    super();\n    this.state = { menu: [] };\n  }\n\n\n  fetchMenu() {\n    axios.get('/api/menu')\n      .then(response => {\n        this.setState({ menu: response.data });\n      })\n      .catch(error => console.log(error));\n  }\n\n\n  componentDidMount() {\n    // Retrieve all menu information\n    this.fetchMenu();\n  }\n\n\n  render() {\n    if (!this.state.menu.length) {\n      return (\n        <div className=\"ui icon message\">\n          <i className=\"notched circle loading icon\"></i>\n          <div className=\"content\">\n            <div className=\"header\">\n              Just one second\n          </div>\n            <p>We're fetching that content for you.</p>\n          </div>\n        </div>);\n    }\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route\n              path=\"/menu\"\n              render={(props) => <MenuList {...props} menu={this.state.menu} />}\n            />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/checkout\" component={Checkout} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}